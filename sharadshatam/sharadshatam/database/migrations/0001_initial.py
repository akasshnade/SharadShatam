# Generated by Django 3.2.9 on 2022-03-01 12:31

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='CustomUser',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('unique_id', models.CharField(blank=True, max_length=200, null=True)),
                ('name', models.CharField(blank=True, max_length=200, null=True)),
                ('email', models.CharField(blank=True, max_length=200, null=True)),
                ('username', models.CharField(blank=True, max_length=200, null=True, unique=True)),
                ('idProof', models.CharField(blank=True, max_length=100, null=True)),
                ('idProofno', models.CharField(blank=True, max_length=200, null=True)),
                ('phone', models.CharField(blank=True, max_length=20)),
                ('confirm_password', models.CharField(max_length=50)),
                ('doctorSpeciality', models.CharField(default='', max_length=200)),
                ('hospitalName', models.CharField(default='', max_length=500)),
                ('district', models.CharField(blank=True, max_length=100, null=True)),
                ('region_type', models.CharField(blank=True, max_length=50, null=True)),
                ('municipal_corporation', models.CharField(blank=True, default='', max_length=100, null=True)),
                ('ward', models.CharField(blank=True, default='', max_length=200, null=True)),
                ('municipal_council', models.CharField(blank=True, default='', max_length=100, null=True)),
                ('taluka', models.CharField(blank=True, default='', max_length=100, null=True)),
                ('phc', models.CharField(blank=True, default='', max_length=100, null=True)),
                ('signup_date', models.DateTimeField(auto_now_add=True)),
                ('login_date_time', models.DateTimeField(blank=True, null=True)),
                ('otp', models.CharField(blank=True, max_length=6, null=True)),
                ('otp_verified', models.BooleanField(default=False)),
                ('created_date', models.DateTimeField(auto_now_add=True)),
                ('expirey_date', models.DateTimeField(blank=True, null=True)),
                ('otp_attempts', models.CharField(blank=True, max_length=6, null=True)),
                ('is_delete', models.BooleanField(default=False)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('masterSupervisor', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='supervisor', to=settings.AUTH_USER_MODEL)),
                ('pathlab', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='CustomUserpathlab', to=settings.AUTH_USER_MODEL)),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='AddressDetails',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('district', models.CharField(blank=True, max_length=100, null=True)),
                ('region_type', models.CharField(blank=True, max_length=50, null=True)),
                ('municipal_corporation', models.CharField(blank=True, max_length=100, null=True)),
                ('ward', models.CharField(blank=True, max_length=200, null=True)),
                ('municipal_council', models.CharField(blank=True, max_length=100, null=True)),
                ('taluka', models.CharField(blank=True, max_length=100, null=True)),
                ('phc', models.CharField(blank=True, max_length=100, null=True)),
                ('sc', models.CharField(blank=True, max_length=100, null=True)),
                ('village', models.CharField(blank=True, max_length=100, null=True)),
                ('other_place', models.CharField(blank=True, max_length=200, null=True)),
                ('address1', models.CharField(blank=True, max_length=250, null=True)),
                ('address2', models.CharField(blank=True, max_length=250, null=True)),
                ('pincode', models.CharField(blank=True, max_length=100, null=True)),
                ('total_family_count', models.IntegerField(default=0)),
                ('selfBookAppoinment', models.BooleanField(default=False)),
                ('created_datetime', models.DateTimeField(auto_now_add=True)),
                ('surveyor', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='surveyor', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='district',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('districtName', models.CharField(blank=True, max_length=300, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='districtHospital',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('hospitalName', models.CharField(blank=True, max_length=300, null=True)),
                ('category', models.CharField(blank=True, max_length=700, null=True)),
                ('concernedPerson', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='districtHospital_concernedPerson', to=settings.AUTH_USER_MODEL)),
                ('hospitaldistrict', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='hospitaldistrict', to='database.district')),
            ],
        ),
        migrations.CreateModel(
            name='familyHeadDetails',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('unique_family_key', models.CharField(blank=True, max_length=150, null=True)),
                ('family_head_name', models.CharField(blank=True, max_length=500, null=True)),
                ('family_head_mobile', models.CharField(blank=True, max_length=20, null=True)),
                ('total_family_members', models.IntegerField(default=0)),
                ('total_senior_citizen', models.IntegerField(default=0)),
                ('FamilyCompleted', models.BooleanField(default=False)),
                ('selfBookAppointment', models.BooleanField(default=False)),
                ('surveyCompleted', models.BooleanField(default=False)),
                ('labsampleTaken', models.BooleanField(default=False)),
                ('created_datetime', models.DateTimeField(auto_now_add=True)),
                ('familyAddress', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='familyAddress', to='database.addressdetails')),
                ('surveyDoneBy', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='surveyDoneBy', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='familyMembers',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('member_unique_id', models.CharField(blank=True, max_length=50, null=True)),
                ('member_name', models.CharField(blank=True, max_length=900, null=True)),
                ('member_gender', models.CharField(blank=True, max_length=10, null=True)),
                ('member_age', models.IntegerField(default=0)),
                ('idProof', models.CharField(blank=True, max_length=100, null=True)),
                ('idProofno', models.CharField(blank=True, max_length=200, null=True)),
                ('state_health_insurance', models.BooleanField(default=False)),
                ('self_mobile', models.BooleanField(default=True)),
                ('mobile_relation', models.CharField(blank=True, max_length=20, null=True)),
                ('mobile', models.CharField(blank=True, max_length=20, null=True)),
                ('visualDisorder', models.BooleanField(default=False)),
                ('physicalDisability', models.BooleanField(default=False)),
                ('bedRidden_due_ailment', models.BooleanField(default=False)),
                ('dependent_on_people', models.BooleanField(default=False)),
                ('pulse', models.CharField(blank=True, max_length=10, null=True)),
                ('blood_pressure', models.CharField(blank=True, max_length=10, null=True)),
                ('respiratory_rate', models.CharField(blank=True, max_length=10, null=True)),
                ('spo2_level', models.CharField(blank=True, max_length=10, null=True)),
                ('weight', models.CharField(blank=True, max_length=10, null=True)),
                ('height', models.CharField(blank=True, max_length=10, null=True)),
                ('bmi', models.CharField(blank=True, max_length=10, null=True)),
                ('above60', models.IntegerField(default=4)),
                ('consume_smoking_gutka_or_khaini', models.IntegerField(choices=[(0, 'Never'), (1, 'Used to consume in past/ sometimes now'), (2, 'Daily')], default=0)),
                ('consume_alcohol_daily', models.IntegerField(choices=[(0, 'No'), (1, 'Sometimes'), (2, 'Addicted')], default=0)),
                ('smoke_score', models.IntegerField(choices=[(0, 'Never'), (1, 'Used to consume in past/ sometimes now'), (2, 'Daily')], default=0)),
                ('waist_measurement', models.IntegerField(blank=True, choices=[('Female', ((0, '80 cm or less'), (1, '81 - 90 cm'), (2, 'More Than 90'))), ('Male', ((0, '90 cm or less'), (1, '90 -100 cm'), (2, 'More Than 100')))], default=0, null=True)),
                ('ability_to_perform_daily_movements', models.IntegerField(blank=True, choices=[(0, 'Can move normally'), (1, 'Difficulty or obstruction during normal movement (need help to move ,with the help of external equipment e.g. stick, walker, crutch etc.)'), (2, 'Bed Ridden')], default=0, null=True)),
                ('isdisease', models.IntegerField(choices=[(0, 'No'), (2, 'Yes')], default=0)),
                ('disease', models.CharField(blank=True, max_length=500, null=True)),
                ('anyone_to_takecare', models.IntegerField(choices=[(1, 'No'), (0, 'Yes')], default=0)),
                ('totalscore', models.IntegerField(default=0)),
                ('shortness_of_breath', models.BooleanField(default=False)),
                ('chest_pain', models.BooleanField(default=False)),
                ('suspected_heart_disease', models.BooleanField(default=False)),
                ('headache', models.BooleanField(default=False)),
                ('dizziness', models.BooleanField(default=False)),
                ('chest_throbbling', models.BooleanField(default=False)),
                ('suspected_high_blood_pressure', models.BooleanField(default=False)),
                ('coughing_more_than_two_weeks', models.BooleanField(default=False)),
                ('blood_in_sputum', models.BooleanField(default=False)),
                ('fever_for_more_than_two_weeks', models.BooleanField(default=False)),
                ('loss_of_weight', models.BooleanField(default=False)),
                ('night_sweats', models.BooleanField(default=False)),
                ('suspected_tuberculosis', models.BooleanField(default=False)),
                ('familyHistory_tuberculosis', models.BooleanField(default=False)),
                ('currently_taking_anti_tb_drugs', models.BooleanField(default=False)),
                ('wounds_or_ulcers_in_mouth_more_than_two_weeks', models.BooleanField(default=False)),
                ('mouth_sores_or_lumps', models.BooleanField(default=False)),
                ('white_or_red_patches_in_mouth', models.BooleanField(default=False)),
                ('pain_while_chewing_food', models.BooleanField(default=False)),
                ('difficulty_in_mouth_opening', models.BooleanField(default=False)),
                ('suspected_mouth_cancer', models.BooleanField(default=False)),
                ('frequently_difficulties_in_breathing', models.BooleanField(default=False)),
                ('dry_cough_many_days', models.BooleanField(default=False)),
                ('tired_or_exhaust', models.BooleanField(default=False)),
                ('spitting_out_thick_cough', models.BooleanField(default=False)),
                ('suspected_copd', models.BooleanField(default=False)),
                ('slow_urination', models.BooleanField(default=False)),
                ('reduced_urination', models.BooleanField(default=False)),
                ('suspected_prostate_gland_disease', models.BooleanField(default=False)),
                ('frequent_urination', models.BooleanField(default=False)),
                ('irritation_while_urination', models.BooleanField(default=False)),
                ('suspected_diabetes', models.BooleanField(default=False)),
                ('suspected_urinary_tract_infection_inflammation', models.BooleanField(default=False)),
                ('decreased_urination', models.BooleanField(default=False)),
                ('feeling_tired', models.BooleanField(default=False)),
                ('appetite_loss', models.BooleanField(default=False)),
                ('limbs_swelling', models.BooleanField(default=False)),
                ('heel_or_foot_swelling', models.BooleanField(default=False)),
                ('feeling_nauseas', models.BooleanField(default=False)),
                ('suspected_kidney', models.BooleanField(default=False)),
                ('urinate_unknowningly', models.BooleanField(default=False)),
                ('suspected_imbalanced_kidney_function', models.BooleanField(default=False)),
                ('frequent_hunger_thirst', models.BooleanField(default=False)),
                ('weight_loss', models.BooleanField(default=False)),
                ('no_wound_healing', models.BooleanField(default=False)),
                ('tingling_in_hands_and_feet', models.BooleanField(default=False)),
                ('history_of_fits', models.BooleanField(default=False)),
                ('suspected_brain_disease', models.BooleanField(default=False)),
                ('suspected_fits', models.BooleanField(default=False)),
                ('sudden_balance_loss_while_walking', models.BooleanField(default=False)),
                ('trembling_feeling', models.BooleanField(default=False)),
                ('things_falling_or_sleeping_out_of_hands', models.BooleanField(default=False)),
                ('suspected_neurological_disorder', models.BooleanField(default=False)),
                ('suspected_parkinson_disease', models.BooleanField(default=False)),
                ('not_closing_of_eyelids_completely', models.BooleanField(default=False)),
                ('feeling_weak_one_side', models.BooleanField(default=False)),
                ('legs_weakness_difficult_walk', models.BooleanField(default=False)),
                ('difficulty_swallowing', models.BooleanField(default=False)),
                ('disability', models.BooleanField(default=False)),
                ('suspected_heart_attack', models.BooleanField(default=False)),
                ('suspected_paralysis', models.BooleanField(default=False)),
                ('blurred_vision_and_reading_difficulty', models.BooleanField(default=False)),
                ('suspected_blindness_or_cataracts', models.BooleanField(default=False)),
                ('non_reducing_eye_pain_more_than_week', models.BooleanField(default=False)),
                ('redness_in_eyes', models.BooleanField(default=False)),
                ('suspected_glaucoma', models.BooleanField(default=False)),
                ('splits_on_mouth_edges', models.BooleanField(default=False)),
                ('tongue_redness', models.BooleanField(default=False)),
                ('mouth_ulcers', models.BooleanField(default=False)),
                ('fatigue_easily', models.BooleanField(default=False)),
                ('suspected_anaemia', models.BooleanField(default=False)),
                ('suspected_malnutrition', models.BooleanField(default=False)),
                ('suspected_vitamins_deficiency', models.BooleanField(default=False)),
                ('patches_on_skin_and_no_sensation', models.BooleanField(default=False)),
                ('suspected_leprosy', models.BooleanField(default=False)),
                ('unbearable_back_pain', models.BooleanField(default=False)),
                ('frequent_fractures', models.BooleanField(default=False)),
                ('joint_pain_at_night', models.BooleanField(default=False)),
                ('pain_when_bones_pressed', models.BooleanField(default=False)),
                ('suspected_osteoporosis', models.BooleanField(default=False)),
                ('impairment_of_movement_physical_disabilities_rheumatism', models.BooleanField(default=False)),
                ('bending_of_toes', models.BooleanField(default=False)),
                ('suspected_osteoarthritis', models.BooleanField(default=False)),
                ('change_in_voice', models.BooleanField(default=False)),
                ('hoarse_voice', models.BooleanField(default=False)),
                ('spitting_blood_while_coughing', models.BooleanField(default=False)),
                ('suspected_cancer', models.BooleanField(default=False)),
                ('lumps_on_skin', models.BooleanField(default=False)),
                ('difficulty_in_hearing', models.BooleanField(default=False)),
                ('suspected_ear_deafness', models.BooleanField(default=False)),
                ('blood_in_stool_or_black_stool', models.BooleanField(default=False)),
                ('suspected_internal_bleeding', models.BooleanField(default=False)),
                ('suspected_piles', models.BooleanField(default=False)),
                ('suspected_fissure', models.BooleanField(default=False)),
                ('suspected_fistula', models.BooleanField(default=False)),
                ('recent_fall', models.BooleanField(default=False)),
                ('history_head_injury', models.BooleanField(default=False)),
                ('suspected_injury', models.BooleanField(default=False)),
                ('lump_in_the_breast', models.BooleanField(default=False)),
                ('pain_in_the_breast', models.BooleanField(default=False)),
                ('blood_stained_discharge_from_the_nipple', models.BooleanField(default=False)),
                ('changes_in_skin_breast', models.BooleanField(default=False)),
                ('change_in_shape_or_size_of_breast', models.BooleanField(default=False)),
                ('suspected_breast_cancer', models.BooleanField(default=False)),
                ('suspected_breast_disease', models.BooleanField(default=False)),
                ('odour_discharge_from_vagina', models.BooleanField(default=False)),
                ('irregular_or_accidental_bleeding', models.BooleanField(default=False)),
                ('abdominal_pain', models.BooleanField(default=False)),
                ('difficulty_while_urinating', models.BooleanField(default=False)),
                ('limb_protrusion', models.BooleanField(default=False)),
                ('bleeding_after_intercourse', models.BooleanField(default=False)),
                ('suspected_cervical_cancer', models.BooleanField(default=False)),
                ('forgetting_house_Address_or_family_member_name', models.BooleanField(default=False)),
                ('not_remembering_life_memories', models.BooleanField(default=False)),
                ('not_remembering_faces_individuals', models.BooleanField(default=False)),
                ('suspected_alzheimers', models.BooleanField(default=False)),
                ('lack_of_interest_in_life', models.BooleanField(default=False)),
                ('depression', models.BooleanField(default=False)),
                ('has_lost_contact_with_family', models.BooleanField(default=False)),
                ('frequent_mood_swings', models.BooleanField(default=False)),
                ('too_angry', models.BooleanField(default=False)),
                ('less_sleep_or_more_sleep_night', models.BooleanField(default=False)),
                ('thought_suicide_come_to_mind', models.BooleanField(default=False)),
                ('suspected_depression', models.BooleanField(default=False)),
                ('very_restless_anxious_after_physical_symptoms', models.BooleanField(default=False)),
                ('feeling_daily_activities_cannot_perform', models.BooleanField(default=False)),
                ('negative_attitude', models.BooleanField(default=False)),
                ('unnecessary_pain', models.BooleanField(default=False)),
                ('weakness', models.BooleanField(default=False)),
                ('no_improvements_after_frequent_treatment', models.BooleanField(default=False)),
                ('suspected_somatic_illness', models.BooleanField(default=False)),
                ('disease_count', models.IntegerField(default=0)),
                ('LabSampleTaken', models.BooleanField(default=False)),
                ('basicLabTest', models.BooleanField(default=False)),
                ('AdvanceLabTest', models.BooleanField(default=False)),
                ('current_isPending', models.BooleanField(default=True)),
                ('current_isMedication', models.BooleanField(default=False)),
                ('current_isSpecialistMedication', models.BooleanField(default=False)),
                ('current_isHospitalisation', models.BooleanField(default=False)),
                ('current_phcConsultation', models.BooleanField(default=False)),
                ('current_specialistConsultation', models.BooleanField(default=False)),
                ('current_isElderline', models.BooleanField(default=False)),
                ('isCaseClosed', models.BooleanField(default=False)),
                ('caseClosedReason', models.TextField(blank=True, null=True)),
                ('caseClosedDate', models.DateTimeField(blank=True, null=True)),
                ('caseClosedBy', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='familyMemberCaseClosedBy', to=settings.AUTH_USER_MODEL)),
                ('distHospital', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='hospital', to='database.districthospital')),
                ('doctorAssigned', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='doctorAssigned', to=settings.AUTH_USER_MODEL)),
                ('family_head', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='family_head_member', to='database.familyheaddetails')),
                ('familysurveyor', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='familysurveyor', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='pathlogy',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('labName', models.CharField(blank=True, max_length=200, null=True)),
                ('is_active', models.BooleanField(default=True)),
                ('district', models.CharField(blank=True, max_length=100, null=True)),
                ('region_type', models.CharField(blank=True, max_length=50, null=True)),
                ('municipal_corporation', models.CharField(blank=True, max_length=100, null=True)),
                ('ward', models.CharField(blank=True, max_length=200, null=True)),
                ('municipal_council', models.CharField(blank=True, max_length=100, null=True)),
                ('taluka', models.CharField(blank=True, max_length=100, null=True)),
                ('phc', models.CharField(blank=True, max_length=100, null=True)),
                ('sc', models.CharField(blank=True, max_length=100, null=True)),
                ('village', models.CharField(blank=True, max_length=100, null=True)),
                ('created_date', models.DateTimeField(auto_now_add=True)),
                ('pathOwner', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='pathOwner', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='PatientTest',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('barcode', models.CharField(blank=True, max_length=50, null=True)),
                ('created_date', models.DateTimeField(auto_now_add=True)),
                ('isCompleted', models.BooleanField(default=False)),
                ('pathlab', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='PatientTest_pathlab', to='database.pathlogy')),
                ('patientDetail', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='PatientTestDetail', to='database.familymembers')),
            ],
        ),
        migrations.CreateModel(
            name='primaryHealthCenter',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('phcName', models.CharField(blank=True, max_length=300, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='sendRegisterOtp',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('phone', models.CharField(blank=True, max_length=20)),
                ('otp', models.CharField(blank=True, max_length=6, null=True)),
                ('otp_verified', models.BooleanField(default=False)),
                ('created_date', models.DateTimeField(auto_now_add=True)),
                ('expirey_date', models.DateTimeField(blank=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='subCenter',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('scName', models.CharField(blank=True, max_length=300, null=True)),
                ('Phc', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='Phc', to='database.primaryhealthcenter')),
            ],
        ),
        migrations.CreateModel(
            name='TestRange',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('testName', models.CharField(blank=True, max_length=100, null=True)),
                ('test_type', models.CharField(choices=[('basic', 'Basic'), ('advance', 'Advance')], max_length=10)),
                ('machine_name', models.CharField(blank=True, max_length=100, null=True)),
                ('unit', models.CharField(blank=True, max_length=10, null=True)),
                ('method_name', models.CharField(blank=True, max_length=50, null=True)),
                ('is_active', models.BooleanField(default=True)),
                ('created_date', models.DateTimeField(auto_now_add=True)),
            ],
        ),
        migrations.CreateModel(
            name='total_council_dashboard',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('district', models.CharField(blank=True, max_length=100, null=True)),
                ('council', models.CharField(blank=True, max_length=200, null=True)),
                ('no_of_seneior_citizen', models.CharField(blank=True, max_length=100, null=True)),
                ('no_of_test_reported', models.CharField(blank=True, max_length=50, null=True)),
                ('no_of_test_completed', models.CharField(blank=True, max_length=50, null=True)),
                ('no_of_test_in_progress', models.CharField(blank=True, max_length=50, null=True)),
                ('no_of_health_facility', models.CharField(blank=True, max_length=50, null=True)),
                ('no_of_patients_attended_by_doctor', models.CharField(blank=True, max_length=50, null=True)),
                ('no_of_empaneled_doctors', models.CharField(blank=True, max_length=50, null=True)),
                ('no_of_empaneled_labs', models.CharField(blank=True, max_length=50, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='total_district_dashboard',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('district', models.CharField(blank=True, max_length=100, null=True)),
                ('no_of_seneior_citizen', models.CharField(blank=True, max_length=100, null=True)),
                ('no_of_test_reported', models.CharField(blank=True, max_length=50, null=True)),
                ('no_of_test_completed', models.CharField(blank=True, max_length=50, null=True)),
                ('no_of_test_in_progress', models.CharField(blank=True, max_length=50, null=True)),
                ('no_of_health_facility', models.CharField(blank=True, max_length=50, null=True)),
                ('no_of_patients_attended_by_doctor', models.CharField(blank=True, max_length=50, null=True)),
                ('no_of_empaneled_doctors', models.CharField(blank=True, max_length=50, null=True)),
                ('no_of_empaneled_labs', models.CharField(blank=True, max_length=50, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='total_mcrop_dashboard',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('district', models.CharField(blank=True, max_length=100, null=True)),
                ('municipal_corporation', models.CharField(blank=True, max_length=200, null=True)),
                ('no_of_seneior_citizen', models.CharField(blank=True, max_length=100, null=True)),
                ('no_of_test_reported', models.CharField(blank=True, max_length=50, null=True)),
                ('no_of_test_completed', models.CharField(blank=True, max_length=50, null=True)),
                ('no_of_test_in_progress', models.CharField(blank=True, max_length=50, null=True)),
                ('no_of_health_facility', models.CharField(blank=True, max_length=50, null=True)),
                ('no_of_patients_attended_by_doctor', models.CharField(blank=True, max_length=50, null=True)),
                ('no_of_empaneled_doctors', models.CharField(blank=True, max_length=50, null=True)),
                ('no_of_empaneled_labs', models.CharField(blank=True, max_length=50, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='total_phc_dashboard',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('district', models.CharField(blank=True, max_length=100, null=True)),
                ('taluka', models.CharField(blank=True, max_length=200, null=True)),
                ('phc_name', models.CharField(blank=True, max_length=200, null=True)),
                ('no_of_seneior_citizen', models.CharField(blank=True, max_length=100, null=True)),
                ('no_of_test_reported', models.CharField(blank=True, max_length=50, null=True)),
                ('no_of_test_completed', models.CharField(blank=True, max_length=50, null=True)),
                ('no_of_test_in_progress', models.CharField(blank=True, max_length=50, null=True)),
                ('no_of_health_facility', models.CharField(blank=True, max_length=50, null=True)),
                ('no_of_patients_attended_by_doctor', models.CharField(blank=True, max_length=50, null=True)),
                ('no_of_empaneled_doctors', models.CharField(blank=True, max_length=50, null=True)),
                ('no_of_empaneled_labs', models.CharField(blank=True, max_length=50, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='total_sc_dashboard',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('district', models.CharField(blank=True, max_length=100, null=True)),
                ('taluka', models.CharField(blank=True, max_length=200, null=True)),
                ('phc_name', models.CharField(blank=True, max_length=200, null=True)),
                ('sc_name', models.CharField(blank=True, max_length=200, null=True)),
                ('no_of_seneior_citizen', models.CharField(blank=True, max_length=100, null=True)),
                ('no_of_test_reported', models.CharField(blank=True, max_length=50, null=True)),
                ('no_of_test_completed', models.CharField(blank=True, max_length=50, null=True)),
                ('no_of_test_in_progress', models.CharField(blank=True, max_length=50, null=True)),
                ('no_of_health_facility', models.CharField(blank=True, max_length=50, null=True)),
                ('no_of_patients_attended_by_doctor', models.CharField(blank=True, max_length=50, null=True)),
                ('no_of_empaneled_doctors', models.CharField(blank=True, max_length=50, null=True)),
                ('no_of_empaneled_labs', models.CharField(blank=True, max_length=50, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='total_taluka_dashboard',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('district', models.CharField(blank=True, max_length=100, null=True)),
                ('taluka', models.CharField(blank=True, max_length=200, null=True)),
                ('no_of_seneior_citizen', models.CharField(blank=True, max_length=100, null=True)),
                ('no_of_test_reported', models.CharField(blank=True, max_length=50, null=True)),
                ('no_of_test_completed', models.CharField(blank=True, max_length=50, null=True)),
                ('no_of_test_in_progress', models.CharField(blank=True, max_length=50, null=True)),
                ('no_of_health_facility', models.CharField(blank=True, max_length=50, null=True)),
                ('no_of_patients_attended_by_doctor', models.CharField(blank=True, max_length=50, null=True)),
                ('no_of_empaneled_doctors', models.CharField(blank=True, max_length=50, null=True)),
                ('no_of_empaneled_labs', models.CharField(blank=True, max_length=50, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='total_ward_dashboard',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('district', models.CharField(blank=True, max_length=100, null=True)),
                ('municipal_corporation', models.CharField(blank=True, max_length=200, null=True)),
                ('ward', models.CharField(blank=True, max_length=200, null=True)),
                ('no_of_seneior_citizen', models.CharField(blank=True, max_length=100, null=True)),
                ('no_of_test_reported', models.CharField(blank=True, max_length=50, null=True)),
                ('no_of_test_completed', models.CharField(blank=True, max_length=50, null=True)),
                ('no_of_test_in_progress', models.CharField(blank=True, max_length=50, null=True)),
                ('no_of_health_facility', models.CharField(blank=True, max_length=50, null=True)),
                ('no_of_patients_attended_by_doctor', models.CharField(blank=True, max_length=50, null=True)),
                ('no_of_empaneled_doctors', models.CharField(blank=True, max_length=50, null=True)),
                ('no_of_empaneled_labs', models.CharField(blank=True, max_length=50, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='village',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('villageName', models.CharField(blank=True, max_length=300, null=True)),
                ('Sc', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='Sc', to='database.subcenter')),
            ],
        ),
        migrations.CreateModel(
            name='taluka',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('talukaName', models.CharField(blank=True, max_length=300, null=True)),
                ('dist', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='dist', to='database.district')),
            ],
        ),
        # migrations.CreateModel(
        #     name='specialistConsultancy',
        #     fields=[
        #         ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
        #         ('specialist_isPending', models.BooleanField(default=True)),
        #         ('specialist_isMedication', models.BooleanField(default=False)),
        #         ('specialist_isHospitalisation', models.BooleanField(default=False)),
        #         ('specialist_Consultation', models.BooleanField(default=False)),
        #         ('specialist_isElderline', models.BooleanField(default=False)),
        #         ('specialist_suggestion_type', models.CharField(blank=True, max_length=500, null=True)),
        #         ('specialist_ConsultationDate', models.DateTimeField(blank=True, null=True)),
        #         ('suggestion_type', models.CharField(blank=True, max_length=500, null=True)),
        #         ('specialist_medicationDate', models.DateTimeField(blank=True, null=True)),
        #         ('specialist_phcConsultationDate', models.DateTimeField(blank=True, null=True)),
        #         ('specialist_hospitalisationDate', models.DateTimeField(blank=True, null=True)),
        #         ('specialist_elderlineDate', models.DateTimeField(blank=True, null=True)),
        #         ('specialist_medicationClosedDate', models.DateTimeField(blank=True, null=True)),
        #         ('specialist_phcConsultationClosedDate', models.DateTimeField(blank=True, null=True)),
        #         ('specialist_hospitalisationClosedDate', models.DateTimeField(blank=True, null=True)),
        #         ('specialist_elderlineClosedDate', models.DateTimeField(blank=True, null=True)),
        #         ('specialist_medicationRemarks', models.CharField(blank=True, max_length=500, null=True)),
        #         ('specialist_hospitalizationRemarks', models.CharField(blank=True, max_length=500, null=True)),
        #         ('specialist_consultationphcRemarks', models.CharField(blank=True, max_length=500, null=True)),
        #         ('specialist_elderlineRemarks', models.CharField(blank=True, max_length=500, null=True)),
        #         ('specialist_fileUpload', models.FileField(blank=True, upload_to='doctorFolder')),
        #         ('specialist_appointDate', models.DateField(blank=True, null=True)),
        #         ('specialist_appointTime', models.TimeField(blank=True, null=True)),
        #         ('specialist_isCaseClosed', models.BooleanField(default=False)),
        #         ('specialist_caseClosedDate', models.DateTimeField(blank=True, null=True)),
        #         ('specialist_created_date', models.DateTimeField(auto_now_add=True)),
        #         ('specialist_DoctorassignedBy', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='specialistDoctorassignedBy', to=settings.AUTH_USER_MODEL)),
        #         ('specialist_docpatient', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='specialistDoctorConsultancy', to='database.familymembers')),
        #         ('specialist_patientLabTestreport', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='specialistPatientLabTestreport', to='database.patienttest')),
        #     ],
        # ),
        migrations.CreateModel(
            name='RolePermissions',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('moduleName', models.CharField(blank=True, max_length=500, null=True)),
                ('action', models.CharField(blank=True, max_length=500, null=True)),
                ('status', models.BooleanField(default=False)),
                ('authgroup', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='RolePermissions_authgroup', to='auth.group')),
            ],
        ),
        migrations.AddField(
            model_name='primaryhealthcenter',
            name='taluka',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='taluka', to='database.taluka'),
        ),
        migrations.CreateModel(
            name='Phlebotomist',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('is_active', models.BooleanField(default=True)),
                ('is_occupied', models.BooleanField(default=False)),
                ('occupied_datetime', models.DateTimeField(blank=True, null=True)),
                ('pathlab', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='Phlebotomistpathlab', to='database.pathlogy')),
                ('phlebotomist_info', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='Phlebotomist_phlebotomist_info', to=settings.AUTH_USER_MODEL)),
                ('surveyour', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='Phlebotomist_surveyour', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        # migrations.CreateModel(
        #     name='phcConsultancy',
        #     fields=[
        #         ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
        #         ('isPending', models.BooleanField(default=True)),
        #         ('isMedication', models.BooleanField(default=False)),
        #         ('isHospitalisation', models.BooleanField(default=False)),
        #         ('phcConsultation', models.BooleanField(default=False)),
        #         ('isElderline', models.BooleanField(default=False)),
        #         ('suggestion_type', models.CharField(blank=True, max_length=500, null=True)),
        #         ('medicationDate', models.DateTimeField(blank=True, null=True)),
        #         ('phcConsultationDate', models.DateTimeField(blank=True, null=True)),
        #         ('hospitalisationDate', models.DateTimeField(blank=True, null=True)),
        #         ('elderlineDate', models.DateTimeField(blank=True, null=True)),
        #         ('medicationClosedDate', models.DateTimeField(blank=True, null=True)),
        #         ('phcConsultationClosedDate', models.DateTimeField(blank=True, null=True)),
        #         ('hospitalisationClosedDate', models.DateTimeField(blank=True, null=True)),
        #         ('elderlineClosedDate', models.DateTimeField(blank=True, null=True)),
        #         ('medicationRemarks', models.CharField(blank=True, max_length=500, null=True)),
        #         ('hospitalizationRemarks', models.CharField(blank=True, max_length=500, null=True)),
        #         ('consultationphcRemarks', models.CharField(blank=True, max_length=500, null=True)),
        #         ('elderlineRemarks', models.CharField(blank=True, max_length=500, null=True)),
        #         ('fileUpload', models.FileField(blank=True, upload_to='doctorFolder')),
        #         ('appointDate', models.DateField(blank=True, null=True)),
        #         ('appointTime', models.TimeField(blank=True, null=True)),
        #         ('isCaseClosed', models.BooleanField(default=False)),
        #         ('caseClosedDate', models.DateTimeField(blank=True, null=True)),
        #         ('created_date', models.DateTimeField(auto_now_add=True)),
        #         ('docpatient', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='phcDoctorConsultancy', to='database.familymembers')),
        #         ('patientLabTestreport', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='phcPatientLabTestreport', to='database.patienttest')),
        #     ],
        # ),
        migrations.CreateModel(
            name='PatientTestReport',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('parameterName', models.CharField(blank=True, max_length=500, null=True)),
                ('parameterValue', models.CharField(blank=True, max_length=500, null=True)),
                ('labRemarks', models.CharField(blank=True, max_length=500, null=True)),
                ('created_date', models.DateTimeField(auto_now_add=True)),
                ('status', models.CharField(blank=True, max_length=500, null=True)),
                ('patientLabTest', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='PatientTestReport_patientLabTest', to='database.patienttest')),
            ],
        ),
        migrations.AddField(
            model_name='patienttest',
            name='phlebotomist',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='PatientTest_phlebotomist_info', to='database.phlebotomist'),
        ),
        migrations.AddField(
            model_name='patienttest',
            name='test',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='PatientTest_test', to='database.testrange'),
        ),
        migrations.CreateModel(
            name='Notification',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_date', models.DateTimeField(auto_now_add=True)),
                ('message', models.TextField(blank=True, null=True)),
                ('isRead', models.BooleanField(default=False)),
                ('read_date', models.DateTimeField(auto_now=True)),
                ('isdeleted', models.BooleanField(default=False)),
                ('family_head', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='Notification_family_head_member', to='database.familyheaddetails')),
                ('readby', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='Notification_readyby', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='MyModel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('field', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='auth.group')),
            ],
        ),
        migrations.CreateModel(
            name='municipalCouncil',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('councilName', models.CharField(blank=True, max_length=300, null=True)),
                ('dist', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='councildist', to='database.district')),
            ],
        ),
        migrations.CreateModel(
            name='municipalCorporation',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('mcName', models.CharField(blank=True, max_length=300, null=True)),
                ('dist', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='mcdist', to='database.district')),
            ],
        ),
        migrations.CreateModel(
            name='mcWard',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('ward', models.CharField(blank=True, max_length=100, null=True)),
                ('mcrop', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='mcrop', to='database.municipalcorporation')),
            ],
        ),
        migrations.CreateModel(
            name='MaleReference',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('low_range', models.DecimalField(blank=True, decimal_places=3, max_digits=7, null=True)),
                ('high_range', models.DecimalField(blank=True, decimal_places=3, max_digits=7, null=True)),
                ('test_range', models.CharField(blank=True, max_length=10, null=True)),
                ('comment', models.CharField(blank=True, max_length=250, null=True)),
                ('test', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='MaleReference_test', to='database.testrange')),
            ],
        ),
        migrations.CreateModel(
            name='FemaleReference',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('low_range', models.DecimalField(blank=True, decimal_places=3, max_digits=7, null=True)),
                ('high_range', models.DecimalField(blank=True, decimal_places=3, max_digits=7, null=True)),
                ('test_range', models.CharField(blank=True, max_length=10, null=True)),
                ('comment', models.CharField(blank=True, max_length=250, null=True)),
                ('test', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='FemaleReference_test', to='database.testrange')),
            ],
        ),
        migrations.AddField(
            model_name='familymembers',
            name='pathlab',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='pathlab', to='database.pathlogy'),
        ),
        migrations.AddField(
            model_name='familymembers',
            name='phlebotomist',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='familymember_phlebotomist_info', to='database.phlebotomist'),
        ),
        migrations.CreateModel(
            name='doctorRemarksPathlab',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('doctorRemarks', models.CharField(blank=True, max_length=500, null=True)),
                ('pathologyResponse', models.CharField(blank=True, max_length=500, null=True)),
                ('response_date', models.DateTimeField(blank=True, null=True)),
                ('created_date', models.DateTimeField(auto_now_add=True)),
                ('isCompleted', models.BooleanField(default=False)),
                ('remarkdoctor', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='remarkdoctor', to=settings.AUTH_USER_MODEL)),
                ('remarkpathlab', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='doctorRemarksPathlab_remarkpathlab', to=settings.AUTH_USER_MODEL)),
                ('remarkreport', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='remarkreport', to='database.patienttestreport')),
                ('respathlogy', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='respathlogy', to='database.pathlogy')),
            ],
        ),
        migrations.CreateModel(
            name='doctorConsultancy',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('doctor_name', models.CharField(blank=True, max_length=500, null=True)),
                ('specialization', models.CharField(blank=True, max_length=500, null=True)),
                ('isPending', models.BooleanField(default=True)),
                ('isMedication', models.BooleanField(default=False)),
                ('isSpecialistMedication', models.BooleanField(default=False)),
                ('isHospitalisation', models.BooleanField(default=False)),
                ('phcConsultation', models.BooleanField(default=False)),
                ('specialistConsultation', models.BooleanField(default=False)),
                ('isElderline', models.BooleanField(default=False)),
                ('DoctorassignedDate', models.DateTimeField(blank=True, null=True)),
                ('suggestion_type', models.CharField(blank=True, max_length=500, null=True)),
                ('doctorRemarks', models.CharField(blank=True, max_length=500, null=True)),
                ('fileUpload', models.FileField(blank=True, upload_to='doctorFolder')),
                ('appointDate', models.DateField(blank=True, null=True)),
                ('appointTime', models.TimeField(blank=True, null=True)),
                ('created_date', models.DateTimeField(auto_now_add=True)),
                ('isCompleted', models.BooleanField(default=False)),
                ('DoctorassignedBy', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='DoctorassignedBy', to=settings.AUTH_USER_MODEL)),
                ('assignedDistrictHospital', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='doctorConsultancy_assignedDistrictHospital', to='database.districthospital')),
                ('assignedDoctor', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='assignedDoctor', to=settings.AUTH_USER_MODEL)),
                ('docpatient', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='doctorConsultancy', to='database.familymembers')),
                ('patientLabTestreport', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='patientLabTestreport', to='database.patienttest')),
            ],
        ),
        migrations.CreateModel(
            name='Doctor',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('doctor_name', models.CharField(blank=True, max_length=900, null=True)),
                ('is_active', models.BooleanField(default=False)),
                ('doctor_cred', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='doctor_cred', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='cantonmentBoard',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('canttName', models.CharField(blank=True, max_length=300, null=True)),
                ('dist', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='canttdist', to='database.district')),
            ],
        ),
    ]
